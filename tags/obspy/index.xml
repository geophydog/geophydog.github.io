<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>obspy on Geophydog</title>
    <link>https://geophydog.cool/tags/obspy/</link>
    <description>Recent content in obspy on Geophydog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Geophydog All rights reserved</copyright>
    <lastBuildDate>Fri, 25 Sep 2020 08:56:35 +0800</lastBuildDate><atom:link href="https://geophydog.cool/tags/obspy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calculating Ray Parameters Using Obspy</title>
      <link>https://geophydog.cool/post/obspy_ray_parameter/</link>
      <pubDate>Fri, 25 Sep 2020 08:56:35 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/obspy_ray_parameter/</guid>
      <description>Usually, we need to do back-projection from our back-azimuth $&amp;ndash;$ slowness panel of body waves to geographic locations. We&amp;rsquo;ll obtain the location of some body phase if we know the ray parameter of the body phase of corresponding epicentral distance. Here, we show you how to calculate the ray parameters versus the epicentral distances using the python library obspy.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from obspy.</description>
    </item>
    
    <item>
      <title>Seismic Data Processing in Python</title>
      <link>https://geophydog.cool/post/python_data_processing/</link>
      <pubDate>Sat, 19 Sep 2020 21:14:22 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/python_data_processing/</guid>
      <description>1 Obtaining Seismic Data Using Obspy 1.1 Basic usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from obspy.clients.fdsn import Client from obspy.core import UTCDateTime # Create a data service from &amp;#39;IRIS&amp;#39; data center. client = Client(&amp;#39;IRIS&amp;#39;) # Setting the start time of waveforms. t1 = UTCDateTime(&amp;#39;2019-09-04T00:00:00&amp;#39;) # End time of waveforms: 3600 seconds shift relative to t1. t2 = t1 + 3600 # Get waveforms.</description>
    </item>
    
  </channel>
</rss>
