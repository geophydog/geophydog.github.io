<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c/c&#43;&#43; on Geophydog</title>
    <link>https://geophydog.cool/categories/c/c&#43;&#43;/</link>
    <description>Recent content in c/c&#43;&#43; on Geophydog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Geophydog All rights reserved</copyright><atom:link href="https://geophydog.cool/categories/c/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Print Colorful Strings in C</title>
      <link>https://geophydog.cool/post/colorful_strings_in_c/</link>
      <pubDate>Mon, 14 Sep 2020 16:25:13 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/colorful_strings_in_c/</guid>
      <description>It&amp;rsquo;s wonderful to print colorful strings on your terminal and here we show you how to do that.
1 2 3 4 5 6 7 8 9 10 11 #include &amp;lt;stdio.h&amp;gt; int main() { char ss[1024] = {&amp;#34;Colorful!!!&amp;#34;}; printf(&amp;#34;\033[0;31m %s \033[0;39m\n&amp;#34;, ss); // red printf(&amp;#34;\033[0;32m %s \033[0;39m\n&amp;#34;, ss); // green printf(&amp;#34;\033[0;33m %s \033[0;39m\n&amp;#34;, ss); // yellow printf(&amp;#34;\033[0;34m %s \033[0;39m\n&amp;#34;, ss); // blue printf(&amp;#34;\033[0;35m %s \033[0;39m\n&amp;#34;, ss); // purple return 0; } </description>
    </item>
    
    <item>
      <title>Function Pointer &amp; Pointer Function</title>
      <link>https://geophydog.cool/post/func_ptr_and_ptr_func/</link>
      <pubDate>Mon, 14 Sep 2020 16:12:24 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/func_ptr_and_ptr_func/</guid>
      <description>1 Ponter function Function pointer is a pointer in c, and it returns a pointer of some type. For instance, its declaration follows
1 int *f(int x, int y); Let&amp;rsquo;s give a code demo to show function pointer.
1 2 3 4 5 6 7 8 9 10 11 12 13 int *add2Num() { int x = 10, y = 20; static int out[3] = {0}; out[0] = 10; out[1] = y; out[2] = x + y; return out; } int main() { int *p = NULL; p = add2Num(); printf(&amp;#34;%d\n&amp;#34;, *(p+1)); return 0; } Output 20</description>
    </item>
    
    <item>
      <title>Advanced Operations in Eigen3</title>
      <link>https://geophydog.cool/post/advanced_eigen3/</link>
      <pubDate>Sat, 05 Sep 2020 10:30:18 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/advanced_eigen3/</guid>
      <description>1 Matrix &amp;lt;-&amp;gt; C/C++ array 1.1 Matrix -&amp;gt; C/C++ array .data() stores the address, so we can give the address to a pointer.
1.2. C/C++ array -&amp;gt; Matrix Using Map to convert a C/C++ array to a Matrix.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include &amp;lt;iostream&amp;gt; #include &amp;lt;Eigen/Dense&amp;gt; using namespace Eigen; using namespace std; int main(int argc, char *argv[]){ int n; n = atoi(argv[1]); MatrixXf b(n, 1); b = MatrixXf::Random(n, 1); cout &amp;lt;&amp;lt; &amp;#34;b:\n&amp;#34; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; // convert Matrix b to C/C++ array c.</description>
    </item>
    
    <item>
      <title>Basic Operations in Eigen3 C&#43;&#43;</title>
      <link>https://geophydog.cool/post/eigen3_operations/</link>
      <pubDate>Fri, 04 Sep 2020 10:37:51 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/eigen3_operations/</guid>
      <description>1. Settings of Eigen 1.1 Here Eigen3 Type sudo apt-get install libeigen3-dev to install Eigen3. It will be installed in the default directory /usr/include/eigen3. Just copy Eigen under /usr/include/eigen3 to the directory /usr/include. 1.2 Header files 1 2 #include &amp;lt;Eigen/Dense&amp;gt; using namespace Eigen; 1.3 Tips MatrixXd m(r, c); &amp;ldquo;X&amp;rdquo; means &amp;ldquo;dynamic&amp;rdquo;, &amp;ldquo;d&amp;rdquo; means basic data type &amp;ldquo;double&amp;rdquo;， &amp;ldquo;r&amp;rdquo; and &amp;ldquo;c&amp;rdquo; indicate no. of rows an columns.
MatrixXf m(r, c); &amp;ldquo;X&amp;rdquo; also means &amp;ldquo;dynamic&amp;rdquo;，&amp;ldquo;f&amp;rdquo; means &amp;ldquo;float&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
