<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spectral analysis on Geophydog</title>
    <link>https://geophydog.cool/categories/spectral-analysis/</link>
    <description>Recent content in spectral analysis on Geophydog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Geophydog All rights reserved</copyright>
    <lastBuildDate>Thu, 11 Mar 2021 14:32:42 +0800</lastBuildDate><atom:link href="https://geophydog.cool/categories/spectral-analysis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Estimating the Power Spectral Density of Ambient Seismic Noise</title>
      <link>https://geophydog.cool/post/psd_notes/</link>
      <pubDate>Thu, 11 Mar 2021 14:32:42 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/psd_notes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Obtain right Cross-Correlation spectrum</title>
      <link>https://geophydog.cool/post/cross-correlation_spectrum/</link>
      <pubDate>Mon, 28 Dec 2020 15:29:40 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/cross-correlation_spectrum/</guid>
      <description>1 Background Ambient seismic noise cross-correlation has far-reaching implications for the passive seismic surface wave imaging from regional to continental scales (e.g. Campillo &amp;amp; Paul, Shapiro &amp;amp; Campillo, 2004). Spectral analysis of cross-correlations is the key to retrieving reliable dispersion information about surface waves. Based on the Fourier spectra of event seismic surface wave data, however, we need to shift the cross-correlation time function before doing FFT to obtain the right spectra.</description>
    </item>
    
    <item>
      <title>Hilbert Transform</title>
      <link>https://geophydog.cool/post/hilbert_transform/</link>
      <pubDate>Thu, 03 Sep 2020 21:23:30 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/hilbert_transform/</guid>
      <description>Firstly, compute the FFT of real signal $x(n)$ $$ X(k) = \mathscr{F}[x(n)]=\sum_{n=0}^{N-1}x(n)e^{-\frac{i2\pi kn}{N}} \tag{1}. $$
Let the FFT of $h(n)$ be $H(k)$ to yield
$$ H(k)= \begin{cases} &amp;amp;X(k), &amp;amp;\text{ for } k=0 \\ &amp;amp;2X(k), &amp;amp;\text{ for } k=1, 2, \cdots, \frac{N}{2}-1 \\ &amp;amp;0, &amp;amp;\text{ for } k=\frac{N}{2}, \frac{N}{2}+1,\cdots, N-1 \end{cases} \tag{2}. $$
The hilbert transform $h(n)$ of the real signal $x(n)$ is given by
$$ h(n) = \mathscr{I} \{ \mathscr{F}^{-1}[H(k)] \} \tag{3}.</description>
    </item>
    
    <item>
      <title>Fourier Transform</title>
      <link>https://geophydog.cool/post/fourier_transform/</link>
      <pubDate>Thu, 03 Sep 2020 17:11:08 +0800</pubDate>
      
      <guid>https://geophydog.cool/post/fourier_transform/</guid>
      <description>1 Introduction The $Fourier \ Transform$ convert the signal in one domain to another domain, for instance from time domain to frequency domain. The definition of $Fourier \ Transform$ is given by $$ X(\omega) = \int_{-\infty}^\infty x(t)e^{-i \omega t} \tag{1}. $$
For the operation in programming, we need its discrete form, namely, $$ X(k) = \sum_{n=0}^{N-1}x(n) e^{\frac{-i2\pi kn}{N}} \tag{2}, $$ where, $k$ is the index of the $k_{th}$ frequency point, and we can find the $k_{th}$ frequency like this $$ f_k = \frac{kf_s}{N} \tag{3}, $$ $f_s$ is sampling rate of signal and $f_s=\frac{1}{\Delta t}$.</description>
    </item>
    
  </channel>
</rss>
